{"version":3,"sources":["navbar/navbar.module.css","todos/filter.js","todos/completeModals.js","todos/Todos.js","settings/Settings.js","users/User.js","users/Register.js","calendar/AddEventModal.js","calendar/EditEventModal.js","calendar/Calendar.js","tasks/finishTaskPage.js","todos/completedTodos.js","App.js","reportWebVitals.js","images/logo_outline.png","navbar/Navbar.js","index.js"],"names":["module","exports","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","filters","getStyles","label","filter","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelectChip","useTheme","React","setFilter","FormControl","sx","m","InputLabel","id","Select","labelId","multiple","value","onChange","event","target","split","console","log","input","OutlinedInput","renderValue","selected","Box","display","flexWrap","gap","map","Chip","MenuItem","Button","onClick","variant","top","startIcon","position","left","transform","bgcolor","border","boxShadow","p","AddToCompleteModal","items","history","useHistory","open","setOpen","handleClose","a","ids","i","length","completed","axios","put","status","IconButton","Modal","onClose","Typography","component","align","Stack","direction","spacing","height","setCompleteToTrue","push","RemoveFromCompleteModal","setCompleteToFalse","createData","task","duedate","importance","obId","category","descendingComparator","b","orderBy","BootstrapDialog","styled","Dialog","padding","BootstrapDialogTitle","props","children","other","DialogTitle","right","color","palette","grey","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","headCells","numeric","disablePadding","importanceSymbol","EnhancedTableHead","onRequestSort","TableHead","TableRow","TableCell","headCell","sortDirection","TableSortLabel","active","property","visuallyHidden","EnhancedTableToolbar","numSelected","selectedItems","Toolbar","pl","sm","pr","xs","alpha","primary","main","action","activatedOpacity","flex","EnhancedTable","loggedIn","setOrder","setOrderBy","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","useState","events","setEvent","emptyRows","Math","max","getEventData","get","data","rows","resp","date","moment","end","format","title","_id","Paper","mb","TableContainer","Table","minWidth","size","onSelectAllClick","checked","newSelecteds","n","onId","rowCount","TableBody","slice","row","isItemSelected","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","Checkbox","inputProps","scope","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","FormControlLabel","control","Switch","ml","to","IconLabelButtons","setLoggedIn","sessionStorage","removeItem","FormPropsTextFields","email","password","user","getUser","handleChange","name","post","setItem","JSON","stringify","message","Add","Task","TextField","required","type","autoComplete","findUser","then","result","alert","Link","firstName","lastName","cPass","setUser","errors","setErrors","styles","helper","response","className","helperText","FormHelperTextProps","userValid","isValid","trim","validator","isEmail","success","validateSignUp","makePostCall","postStatus","AddEventModal","clicked","setEvents","setModal","start","startDate","setStartDate","endDate","setEndDate","setCategory","important","setImportance","setTitle","description","setDescription","doNotPush","setDoNotPush","givenStart","givenEnd","today","Date","subtract","difference","diff","setHours","add","DialogContent","DialogContentText","marginBottom","DateTimePicker","renderInput","params","FormGroup","select","im","option","cat","margin","autoFocus","fullWidth","DialogActions","addNewEvent","EditEventModal","setGivenStart","setGivenEnd","importChanged","setImportChanged","dateChanged","setDateChanged","delete","e","deleteEvent","updateEvent","localizer","momentLocalizer","allViews","Object","keys","Views","k","MyCalendar","modalAdd","setModalAdd","modalEdit","setModalEdit","clickedEvent","setClickedEvent","useEffect","getEvents","selectable","step","showMultiDayTimes","views","onView","handleChangeView","onSelectSlot","handleSelectedSlot","onSelectEvent","handleSelectedEvent","mt","window","innerWidth","innerHeight","date1","date2","actual","App","tokenString","getItem","parse","getLoggedIn","LocalizationProvider","dateAdapter","DateAdapter","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","flexGrow","AppBar","href","src","logo","alt","navImage","createTheme","secondary","fontFamily","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0ea80b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navImage\":\"navbar_navImage__IKDX0\"};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\nimport { Button } from '@mui/material';\nimport ClearIcon from '@mui/icons-material/Clear';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nconst filters = [\n'School',\n'Work', \n'Personal',\n'!', \n'!!',\n'!!!',\n\n];\n\n\nfunction getStyles(label, filter, theme) {\n  return {\n    fontWeight:\n      filter.indexOf(label) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function MultipleSelectChip() {\n  const theme = useTheme();\n  const [filter, setFilter] = React.useState([]);\n  //const [open, setOpen] = React.useState(false);\n\n//   const handleClose = () => {\n//   setOpen(false);\n// };\n\nconst handleClear = (event)=>{\n  setFilter(\n    []\n  )\n}\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setFilter(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n\n    console.log(filter);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 3, width: 300 }}>\n        <InputLabel id=\"demo-multiple-chip-label\">Filters</InputLabel>\n        <Select\n          labelId=\"demo-multiple-chip-label\"\n          id=\"demo-multiple-chip\"\n          multiple\n          value={filter}\n          onChange={handleChange}\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Filters\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5}}>\n              {selected.map((value) => (\n               <Chip key={value} label={value} />\n              ))}\n            </Box>\n          )}\n          MenuProps={MenuProps}\n        >\n          {filters.map((label) => (\n            <MenuItem\n              key={label}\n              value={label}\n              style={getStyles(label, filter, theme)}\n              //displays options \n            >\n              {label}\n            </MenuItem>\n          ))}\n        </Select>\n        { <Button onClick = {handleClear}\n          variant=\"outlined\"\n          style={{ width: \"300px\", top:5 }}\n          startIcon={< ClearIcon/>}\n        >\n          Clear \n        </Button>\n        /*\n        <Button onClick={handleClose}\n          variant=\"outlined\"\n          style={{ width: \"300px\", top: 10}}\n          startIcon={<AddIcon />}\n        >\n          Apply \n        </Button> */}\n        \n      </FormControl>\n     \n    </div>\n\n  );\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Modal from '@mui/material/Modal';\nimport RemoveDoneIcon from '@mui/icons-material/RemoveDone';\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { useHistory } from \"react-router-dom\";\nimport CheckIcon from '@mui/icons-material/Check';\nimport axios from 'axios';\nimport EditIcon from '@mui/icons-material/Edit';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\nexport function AddToCompleteModal (items) { \n    const history = useHistory();\n\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const handleRouteComplete = () =>{ \n        setCompleteToTrue()\n        history.push(\"/finish\");\n    }\n    async function setCompleteToTrue(){\n        const ids = items[\"selectedItems\"]\n        for(let i = 0; i < ids.length; i++) {\n            const completed = {\n                completed: true\n            }\n            try {\n                const response = await axios.put('http://localhost:5000/todos/completed/' + ids[i], completed);\n                if(response.status === 204){\n                    console.log(\"completed was set to false\")\n                }\n                else {\n                    console.log(\"Error, event not deleted from database.\")\n                }\n            }\n            catch (error) {\n                console.log(error);\n                return false;\n            }\n        }\n    }\n    return (\n        <div>\n         <IconButton >\n             <CheckIcon onClick={handleOpen}/>     \n         </IconButton>\n         <IconButton >\n             <EditIcon />  \n         </IconButton>\n         <Modal\n             open={open}\n             onClose={handleClose}\n             aria-labelledby=\"modal-modal-title\"\n             aria-describedby=\"modal-modal-description\"\n         >\n         <Box sx={style}>\n           <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\"align={\"center\"}>\n            Have you completed this task?\n             <Stack direction=\"column\" spacing={4}>\n                 <Button variant=\"contained\" style={{ height: '45px', width: '310px', top: 10, left: 45 }} startIcon={<DoneAllIcon />}  onClick={handleRouteComplete}>\n                    Yes, add to my completed list\n                 </Button>\n                 <Button variant=\"contained\" style={{ height: '45px', width: '310px', top: 10, left: 45 }} startIcon={<RemoveDoneIcon />} onClick={handleClose}>\n                    No, leave as not complete\n                 </Button>\n             </Stack>\n           </Typography>\n         </Box>\n       </Modal>\n     </div>\n    )\n}\nexport function RemoveFromCompleteModal (items) { \n    const history = useHistory();\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const handleRouteTodo = () =>{ \n        setCompleteToFalse()\n        history.push(\"/todos\");\n    }\n    async function setCompleteToFalse(){\n        const ids = items[\"selectedItems\"]\n        for(let i = 0; i < ids.length; i++) {\n            const completed = {\n                completed: false\n            }\n            try {\n                const response = await axios.put('http://localhost:5000/todos/completed/' + ids[i], completed);\n                if(response.status === 204){\n                    console.log(\"completed was set to false\")\n                }\n                else {\n                    console.log(\"Error, event not deleted from database.\")\n                }\n            }\n            catch (error) {\n                console.log(error);\n                return false;\n            }\n        }\n    }\n    return (\n        <div>\n            <IconButton >\n                <RemoveDoneIcon onClick={handleOpen}/>     \n            </IconButton>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n            <Box sx={style}>\n                <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\n                    Add this task back to your todo list?\n                    <Stack direction=\"column\" spacing={4}>\n                        <Button variant=\"contained\" style={{ height: '45px', width: '310px', top: 10, left: 45 }} startIcon={<DoneAllIcon />}  onClick={handleRouteTodo}>\n                            Yes, add to my todo list\n                        </Button>\n                        <Button variant=\"contained\" style={{ height: '45px', width: '310px', top: 10, left: 45 }} startIcon={<RemoveDoneIcon />} onClick={handleClose}>\n                            No, leave as complete\n                        </Button>\n                    </Stack>\n                  </Typography>\n                </Box>\n              </Modal>\n            </div>\n    )\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport { visuallyHidden } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Filter from \"./filter.js\";\nimport { useHistory } from \"react-router-dom\";\nimport AddIcon from '@mui/icons-material/Add';\nimport { AddToCompleteModal } from \"./completeModals\";\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport { Redirect } from 'react-router';\nimport moment from \"moment\";\n//TO REDIRECT TO CONFIRMATION PAGE OR OTHER PAGES \n// it works sometimes... its a little odd \n //  <Redirect to = \"/confirmation\"/>\n\n\n\nfunction createData(task, duedate, importance, obId, category) {\n  return {\n    task,\n    duedate,\n    importance,\n    obId,\n    category\n  };\n}\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        \n      ) : null}\n        <Button\n          variant=\"outlined\"\n          style={{ width: \"300px\", left: 25, top: -15}}\n          startIcon={<AddIcon />}\n        >\n          Apply \n        </Button>\n      \n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: 'task',\n    numeric: false,\n    disablePadding: true,\n    label: 'Event',\n  },\n  {\n    id: 'duedate',\n    numeric: true,\n    disablePadding: false,\n    label: 'Due Date',\n  },\n  {\n    id: 'importance',\n    numeric: true,\n    disablePadding: false,\n    label: 'Importance',\n  },\n  {\n    id: 'id',\n    numeric: true,\n    disablePadding: false,\n  },\n  {\n    id: 'category',\n    numeric: true,\n    disablePadding: false,\n  },\n];\nconst importanceSymbol = [\"\", \"!\", \"\", \"!!\", \"\", \"!!!\", \"\", \"!!!!\"]\n\nfunction EnhancedTableHead(props) {\n  const {order, orderBy, onRequestSort } =\n    props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n\n\n  return (\n    <TableHead>\n    <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n            <TableCell\n                key={headCell.id}\n                align={headCell.numeric ? 'right' : 'left'}\n                padding={headCell.disablePadding ? 'none' : 'normal'}\n                sortDirection={orderBy === headCell.id ? order : false}\n            >\n                <TableSortLabel\n                    active={orderBy === headCell.id}\n                    direction={orderBy === headCell.id ? order : 'asc'}\n                    onClick={createSortHandler(headCell.id)}\n                >\n                    {headCell.label}\n                    {orderBy === headCell.id ? (\n                        <Box component=\"span\" sx={visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                        </Box>\n                    ) : null}\n                </TableSortLabel>\n            </TableCell>\n        ))}\n    </TableRow>\n</TableHead>\n);\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst EnhancedTableToolbar = (props) => {\n    \n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const history = useHistory();\n\n\n  const handleRouteCom = () =>{ \n    history.push(\"/completed\");\n  }\n\n\n  const { numSelected } = props;\n  const { selectedItems } = props;\n\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected \n        </Typography>\n      ) : (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          To Do List\n\n        <Button variant=\"outlined\" style={{ height: '45px', width: '100px', top: 10, left: 65 }}>\n          <AddIcon/>\n       Add\n      </Button>\n\n        <Button variant=\"outlined\" style={{ height: '45px', width: '150px', top: 10, left: 70 }}>\n       All Tasks\n      </Button>\n\n      <Button variant=\"outlined\" style={{ height: '45px', width: '150px', top: 10, left:75 }}>\n       Today\n      </Button>\n\n      <Button variant=\"outlined\" style={{ height: '45px', width: '150px', top: 10, left: 80 }}>\n       Week\n      </Button>\n\n      <Button variant=\"outlined\" style={{ height: '45px', width: '150px', top: 10, left: 85 }} onClick = {handleRouteCom}>\n       Completed \n      </Button>\n\n      <Button variant=\"outlined\" style={{ height: '45px', width: '150px', top: 10, left: 200}} onClick={handleClickOpen}>\n        <FilterListIcon />\n          Filter\n        </Button>\n\n        <BootstrapDialog\n          onClose={handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={open}\n        >\n          <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n            Filter Events\n            <Filter />\n            \n          </BootstrapDialogTitle>\n        </BootstrapDialog>\n        </Typography>\n        \n      )}\n\n      {numSelected === 1 ? (\n          <AddToCompleteModal selectedItems = {selectedItems} />\n             \n      ) : (\n        <div>\n          \n      </div>\n      )}\n\n{numSelected >= 2 ? (\n               < Typography\n               sx={{ flex: '1 1 100%' }}\n               align = \"right\"\n               variant=\"h6\"\n               id=\"tableTitle\"\n               component=\"div\"\n             >\n               Please select one event\n              </Typography>\n      ) : (\n        <div>\n      </div>\n      )}\n\n\n      \n\n    </Toolbar>\n\n    \n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selectedItems: PropTypes.arrayOf(Object),\n};\n\nexport default function EnhancedTable({loggedIn}) {\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('importance');\n  //const [orderBy, setOrderBy] = React.useState('importance');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [events, setEvent] = useState([]);\n\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = events.map((n) => n.onId);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n\n\n  const handleClick = (event, task) => {\n    const selectedIndex = selected.indexOf(task);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, task);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (task) => selected.indexOf(task) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - events.length) : 0;\n    const getEventData = async () => {\n        try {\n            const data = await axios.get(\"http://localhost:5000/todos\");\n            const rows = []\n            for(let i = 0; i < data.data.length; i++) {\n                let resp = data.data[i]\n                const date = moment(resp.end).format('L, h:mm a')\n                const importance = importanceSymbol[resp.importance]\n                rows.push(createData(resp.title, date, importance, resp._id, resp.category))\n            }\n            setEvent(rows);\n        }catch (e) {\n            console.log(e);\n        }\n        };\n        React.useEffect(() => {\n            getEventData();\n        }, []);\n  if(!loggedIn){\n    return <Redirect to=\"/login\"></Redirect>\n  }\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Paper sx={{ width: '100%', mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} selectedItems={selected} />\n        <TableContainer>\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={events.length}\n            />\n            <TableBody>\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                 rows.slice().sort(getComparator(order, orderBy)) */}\n              {stableSort(events, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.obId);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.obId)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.obId}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            'aria-labelledby': labelId,\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.task}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.duedate}</TableCell>\n                      <TableCell align=\"right\">{row.importance}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={events.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        sx={{ mb: 1, ml: 2 }}\n        label=\"Dense padding\"\n      />\n    </Box>\n  );\n}\n\n\n\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport Stack from \"@mui/material/Stack\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport { Redirect } from \"react-router\";\n\nexport default function IconLabelButtons({loggedIn, setLoggedIn}) {\n  function handleLogout(){\n    setLoggedIn(false)\n    sessionStorage.removeItem('loggedIn');\n  }\n\n  if(!loggedIn){\n    return <Redirect to=\"/login\"></Redirect>\n  }\n  return (\n    <Stack direction=\"column\" spacing={4}>\n      <Button\n        variant=\"outlined\"\n        style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n        startIcon={<AccountCircleIcon />}\n      >\n        Profile\n      </Button>\n      <Button\n        variant=\"outlined\"\n        style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n        startIcon={<SettingsIcon />}\n      >\n        Preferences\n      </Button>\n      <Button\n        variant=\"outlined\"\n        style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n        startIcon={<LogoutIcon />}\n        onClick={handleLogout}\n      >\n        LogOut\n      </Button>\n    </Stack>\n  );\n}\n","import React, {useState} from 'react';\nimport axios from 'axios';\nimport TextField from \"@mui/material/TextField\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nexport default function FormPropsTextFields({setLoggedIn}) {\n  let history = useHistory();\n  const [user, getUser] = useState({\n    email: \"\",\n    password: \"\",\n});\n  function handleChange(event) {\n    getUser({\n        ...user,\n        [event.target.name]: event.target.value\n    });\n}\n\nfunction login(event) {\n  findUser(user, setLoggedIn).then(function(result) {\n  if(result === 200){\n    console.log(result)\n    history.push('/todos')\n  }\n  else{\n    alert(\"Incorrect Email/Password Combination\")\n    console.log(\"not logged in\")\n  }\n});\n  \n};\n\nasync function findUser(user, setLoggedIn){\n  try {\n     const response = await axios.post('http://127.0.0.1:5000/login', user);\n     if (response.status === 200) {\n       setLoggedIn(true)\n       sessionStorage.setItem('loggedIn', JSON.stringify(true));\n       return 200\n     }\n     return false;  \n    }\n  catch (error) {\n     console.log(error.message);\n     return 401;\n  }\n}\n  return (\n    <Stack direction=\"column\" spacing={5}>\n      <label\n        style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n        Add\n        Task\n      />\n      <TextField\n        required\n        name=\"email\"\n        id=\"outlined-required\"\n        label=\"Email\"\n        style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n        value={user.email}\n        onChange={handleChange}\n      />\n      <TextField\n        required\n        name=\"password\"\n        id=\"outlined-password-input\"\n        label=\"Password\"\n        value={user.password}\n        type=\"password\"\n        autoComplete=\"current-password\"\n        style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n        onChange={handleChange}\n      />\n      <Button\n        variant=\"outlined\"\n        style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n        startIcon={<LoginIcon />}\n        onClick={login}\n      >\n        Log In\n      </Button>\n      <Button \n        component={Link} \n        to=\"/register\" \n        style={{ height: \"30px\", width: \"300px\", top: 75, left: 450 }}\n        variant=\"contained\" \n        color=\"primary\"\n        >\n        Register\n      </Button>\n    </Stack>\n  );\n}\n","//import * as React from \"react\";\nimport React, {useState} from 'react';\nimport axios from 'axios';\nimport TextField from \"@mui/material/TextField\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport { useHistory } from 'react-router-dom';\n\nexport default function FormPropsTextFields({ setLoggedIn }) {\n    let history = useHistory();\n    const [user, setUser] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        cPass: \"\"\n    });\n    const [errors, setErrors] = useState({   \n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        cPass: \"\"\n    })\n    const styles = {\n        helper: {\n             color: 'red'\n        }\n    }\n    function handleChange(event) {\n        setUser({\n            ...user,\n            [event.target.name]: event.target.value\n        });\n    }\n    function signUp(event) {\n        const userValid = validateSignUp(user)\n        setErrors({\n            firstName: userValid.errors.firstName,\n            lastName: userValid.errors.lastName,\n            email: userValid.errors.email,\n            password: userValid.errors.password,\n            cPass: userValid.errors.cPass\n        });\n        if (userValid.success)\n            makePostCall(user).then(function(postStatus) {\n                console.log(postStatus)\n                if (postStatus === 201) {\n                    history.push('/todos')\n                }\n                else {\n                    alert(\"Email already in use, redirecting to login page.\")\n                    history.push('/login')\n                }\n            });\n    };\n    function validateSignUp(user) {\n        const errors = {}\n        let isValid = true\n\n        if (!user || user.firstName.trim().length === 0) {\n            isValid = false\n            errors.firstName = \"Please enter a first name.\"\n        }\n        if (!user || user.lastName.trim().length === 0) {\n            isValid = false\n            errors.lastName = \"Please enter a last name.\"\n        }\n        if (!user || user.email.trim().length === 0 || !validator.isEmail(user.email)) {\n            isValid = false\n            errors.email = \"Please enter a valid email address.\"\n        }\n        if (!user || user.password.trim().length === 0) {\n            isValid = false\n            errors.password = \"Please enter a password.\"\n        }\n        if (!user || user.password !== user.cPass) {\n            isValid = false\n            errors.cPass = \"Passwords do not match.\"\n        }\n        return {\n            success: isValid,\n            errors\n        };\n    }\n    async function makePostCall(user){\n        try {\n           const response = await axios.post('http://127.0.0.1:5000/users', user);\n           if (response.status === 201) {\n            setLoggedIn(true)\n            sessionStorage.setItem('loggedIn', JSON.stringify(true));\n            console.log(\"201\");\n           }\n           return response.status;\n        }\n        catch (error) {\n           console.log(error.message);\n           return false;\n        }\n    }\n\n\n    return (\n        <div className=\"registerBox\">\n            <Stack direction=\"column\" spacing={5}>   \n            <label\n                style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n                Add\n                Task\n            />\n            <TextField\n                required\n                name=\"firstName\"\n                id=\"outlined-required\"\n                label=\"First Name\"\n                style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n                value={user.firstName}\n                onChange={handleChange}\n                helperText={errors.firstName}\n                FormHelperTextProps={{style: styles.helper}}\n            />\n            <TextField\n                required\n                name=\"lastName\"\n                id=\"outlined-required\"\n                label=\"Last Name\"\n                style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n                value={user.lastName}\n                onChange={handleChange}\n                helperText={errors.lastName}\n                FormHelperTextProps={{style: styles.helper}}\n            />\n            <TextField\n                required\n                name=\"email\"\n                id=\"outlined-required\"\n                label=\"Email\"\n                style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n                value={user.email}\n                onChange={handleChange}\n                helperText={errors.email}\n                FormHelperTextProps={{style: styles.helper}}\n            />\n            <TextField\n                required\n                name=\"password\"\n                id=\"outlined-password-input\"\n                label=\"Password\"\n                type=\"password\"\n                style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n                value={user.password}\n                onChange={handleChange}\n                helperText={errors.password}\n                FormHelperTextProps={{style: styles.helper}}\n            />\n            <TextField\n                required\n                name=\"cPass\"\n                id=\"outlined-password-input\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n                value={user.cPass}\n                onChange={handleChange}\n                helperText={errors.cPass}\n                FormHelperTextProps={{style: styles.helper}}\n            />\n            <Button\n                variant=\"outlined\"\n                style={{ height: \"30px\", width: \"300px\", top: 100, left: 450 }}\n                startIcon={<LoginIcon />}\n                onClick={signUp}\n            >\n                Sign Up\n            </Button>\n            <Button \n                component={Link} \n                to=\"/login\" \n                style={{ height: \"30px\", width: \"300px\", top: 75, left: 450 }}\n                variant=\"contained\" \n                color=\"primary\"\n                >\n                Log In\n            </Button>\n            </Stack>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport { MenuItem } from '@mui/material';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport { Checkbox } from '@mui/material';\nimport { FormGroup } from '@mui/material';\nimport { FormControlLabel } from '@mui/material';\nimport axios from 'axios';\nimport moment from \"moment\";\n\nexport default function AddEventModal ({clicked, events, setEvents, setModal}) { \n    const [startDate, setStartDate] = React.useState(clicked.start);\n    const [endDate, setEndDate] = React.useState(clicked.end);\n    const [category, setCategory] = React.useState('Other');\n    const [important, setImportance] = React.useState('!');\n    const [title, setTitle] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    const [doNotPush, setDoNotPush] = React.useState(false);\n\n    function handleClose() {\n        setModal(false)\n    }\n\n    const handleChangeStartDate = (date) => {\n        setStartDate(date);\n    };\n\n    const handleChangeEndDate = (date) => {\n        console.log(date)\n        setEndDate(date);\n    };\n\n    const handleChangeDoNotPush = () => {\n        setDoNotPush(!doNotPush);\n    }\n\n    const handleChangeCategory = (cat) => {\n        setCategory(cat.target.value);\n      };\n\n    const handleChangeImportance = (im) => {\n        setImportance(im.target.value);\n      };\n\n    async function addNewEvent(){\n        var event = {\n            title: title,\n            start: startDate,\n            end: endDate,\n            description: description,\n            importance: important,\n            givenStart: startDate,\n            givenEnd: endDate,\n            category: category,\n            doNotPush: doNotPush,\n            completed: false\n        }\n        try {\n            if (!doNotPush) {\n                console.log(startDate)\n                var today = new Date();\n                event.start = moment(startDate).subtract(important, 'day');\n                console.log(event.start)\n                event.end = moment(endDate).subtract(important, 'day');\n                var difference = moment(event.end).diff(event.start, 'days');\n                if (event.start < today) {\n                    event.start = new Date(today.setHours(0,0,0,0));\n                    console.log(event.start)\n                    event.end = moment(event.start).add(difference, 'days');\n                }\n            }\n            const response = await axios.post('http://localhost:5000/todos', event);\n            if(response.status === 201 && event.givenStart >= today.setHours(0,0,0,0)){\n                setEvents([...events, response.data])\n            }\n            else if (event.givenStart < today.setHours(0,0,0,0)) {\n                alert(\"Please select a date that has not passed.\")\n                console.log(\"Error, event not added to database.\")\n            }\n            else {\n                console.log(\"Error, event not added to database.\")\n            }\n        }\n        catch (error) {\n            console.log(error);\n            return false;\n        }\n    }\n\n    const handleSubmit = () => {\n        addNewEvent()\n        setModal(false)\n    }\n\n    const importance = [\n        {\n          value: 1,\n          label: '!',\n        },\n        {\n          value: 3,\n          label: '!!',\n        },\n        {\n          value: 5,\n          label: '!!!',\n        },\n        {\n          value: 7,\n          label: '!!!!',\n        },\n      ];\n\n      const categories = [\n        {\n          value: 'School',\n          label: 'School',\n        },\n        {\n          value: 'Work',\n          label: 'Work',\n        },\n        {\n          value: 'Other',\n          label: 'Other',\n        },\n      ];\n\n    return (\n        <div>\n            <DialogTitle>Add Event</DialogTitle>\n            <DialogContent >\n                <DialogContentText style={{marginBottom: \"30px\"}}>\n                    Please enter the information below to add a new event!\n                </DialogContentText>\n                <DateTimePicker\n                    label=\"Start\"\n                    value={startDate}\n                    onChange={handleChangeStartDate}\n                    renderInput={(params) => <TextField {...params} />}\n                />\n                <DateTimePicker\n                    label=\"End\"\n                    value={endDate}\n                    onChange={handleChangeEndDate}\n                    renderInput={(params) => <TextField {...params} />}\n                />\n                <FormGroup style={{marginBottom: \"30px\"}}>\n                    <FormControlLabel control=\n                        {<Checkbox  \n                             onClick={handleChangeDoNotPush}   \n                        />} label=\"Do NOT Push Up Date\" />\n                </FormGroup>\n                <TextField\n                    select\n                    label=\"Select\"\n                    value={important}\n                    onChange={handleChangeImportance}\n                    helperText=\"Importance\"\n                    >\n                    {importance.map((option) => (\n                        <MenuItem key={option.label} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    select\n                    label=\"Select\"\n                    value={category}\n                    onChange={handleChangeCategory}\n                    helperText=\"Please select a category\"\n                    >\n                    {categories.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                margin=\"dense\"\n                autoFocus\n                id=\"name\"\n                label=\"Title\"\n                fullWidth\n                variant=\"standard\"\n                value={title}\n                onChange={(event) => {setTitle(event.target.value)}}\n                />\n                <TextField\n                margin=\"dense\"\n                label=\"Description\"\n                fullWidth\n                variant=\"standard\"\n                value={description}\n                onChange={(event) => {setDescription(event.target.value)}}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button onClick={handleSubmit}>Add</Button>\n            </DialogActions>\n        </div>\n    );\n}","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport { MenuItem } from '@mui/material';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport { Checkbox } from '@mui/material';\nimport { FormGroup } from '@mui/material';\nimport { FormControlLabel } from '@mui/material';\nimport axios from 'axios';\nimport moment from \"moment\";\n\nexport default function EditEventModal ({clicked, events, setEvents, setModal}) { \n    const [startDate, setStartDate] = React.useState(clicked.start);\n    const [endDate, setEndDate] = React.useState(clicked.end);\n    const [category, setCategory] = React.useState(clicked.category);\n    const [important, setImportance] = React.useState(clicked.importance);\n    const [givenStart, setGivenStart] = React.useState(clicked.givenStart);\n    const [givenEnd, setGivenEnd] = React.useState(clicked.givenEnd);\n    const [title, setTitle] = React.useState(clicked.title);\n    const [description, setDescription] = React.useState(clicked.description);\n    const [doNotPush, setDoNotPush] = React.useState(clicked.doNotPush);\n    const [importChanged, setImportChanged] = React.useState(false);\n    const [dateChanged, setDateChanged] = React.useState(false);\n\n    function handleClose() {\n        setModal(false)\n    }\n\n    const handleChangeStartDate = (date) => {\n        setStartDate(date);\n        setGivenStart(date);\n        setDateChanged(true);\n    };\n\n    const handleChangeEndDate = (date) => {\n        setEndDate(date);\n        setGivenEnd(date);\n        setDateChanged(true);\n    };\n\n    const handleChangeDoNotPush = () => {\n        setDoNotPush(!doNotPush)\n    }\n\n    const handleChangeCategory = (cat) => {\n        setCategory(cat.target.value);\n      };\n\n    const handleChangeImportance = (im) => {\n        setImportance(im.target.value);\n        setImportChanged(true);\n      };\n\n    async function deleteEvent(){\n        try {\n            const response = await axios.delete('http://localhost:5000/todos/' + clicked._id);\n            if(response.status === 204){\n                events = events.filter(e => e._id !== clicked._id)\n                setEvents([...events])\n            }\n            else {\n                console.log(\"Error, event not deleted from database.\")\n            }\n        }\n        catch (error) {\n            console.log(error);\n            return false;\n        }\n    }\n\n    async function updateEvent(){\n        var event = {\n            title: title,\n            start: startDate,\n            end: endDate,\n            description: description,\n            importance: important,\n            givenStart: givenStart,\n            givenEnd: givenEnd,\n            category: category,\n            doNotPush: doNotPush,\n            importChanged: importChanged,\n            dateChanged: dateChanged,\n            completed: false\n        }\n        try {\n            if (!doNotPush && (importChanged || dateChanged)) {\n                event.start = moment(givenStart).subtract(important, 'day');\n                event.end = moment(givenEnd).subtract(important, 'day');\n                var difference = moment(event.end).diff(event.start, 'hours')\n                console.log(difference)\n                var today = new Date();\n                console.log(today)\n                if (event.start < today) {\n                    event.start = today.setHours(0,0,0,0);\n                    event.end = moment(event.start).add(difference, 'hours');\n                }\n            }\n            const response = await axios.put('http://localhost:5000/todos/' + clicked._id, event);\n            if(response.status === 204){\n                events = events.filter(e => e._id !== clicked._id)\n                event[\"_id\"] = clicked._id\n                setEvents([...events, event])\n            }\n            else {\n                console.log(\"Error, event not deleted from database.\")\n            }\n        }\n        catch (error) {\n            console.log(error);\n            return false;\n        }\n    }\n\n    const handleDelete = () => {\n        deleteEvent()\n        setModal(false)\n    }\n\n    const handleUpdate = () => {\n        updateEvent()\n        setModal(false)\n    }\n\n    const importance = [\n        {\n          value: 1,\n          label: '!',\n        },\n        {\n          value: 3,\n          label: '!!',\n        },\n        {\n          value: 5,\n          label: '!!!',\n        },\n        {\n          value: 7,\n          label: '!!!!',\n        },\n      ];\n\n      const categories = [\n        {\n          value: 'School',\n          label: 'School',\n        },\n        {\n          value: 'Work',\n          label: 'Work',\n        },\n        {\n          value: 'Other',\n          label: 'Other',\n        },\n      ];\n\n    return (\n        <div>\n            <DialogTitle>Edit Event</DialogTitle>\n            <DialogContent >\n                <DialogContentText style={{marginBottom: \"30px\"}}>\n                    Please modify the information below to edit the event!\n                </DialogContentText>\n                <DateTimePicker\n                    label=\"Start\"\n                    value={startDate}\n                    onChange={handleChangeStartDate}\n                    renderInput={(params) => <TextField {...params} />}\n                />\n                <DateTimePicker\n                    label=\"End\"\n                    value={endDate}\n                    onChange={handleChangeEndDate}\n                    renderInput={(params) => <TextField {...params} />}\n                />\n                <FormGroup style={{marginBottom: \"30px\"}}>\n                    <FormControlLabel control=\n                        {<Checkbox\n                             checked={doNotPush}\n                             onChange={handleChangeDoNotPush}   \n                        />} label=\"Do NOT Push Up Date\" />\n                </FormGroup>\n                <TextField\n                    select\n                    label=\"Select\"\n                    value={important}\n                    onChange={handleChangeImportance}\n                    helperText=\"Importance\"\n                    >\n                    {importance.map((option) => (\n                        <MenuItem key={option.label} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    select\n                    label=\"Select\"\n                    value={category}\n                    onChange={handleChangeCategory}\n                    helperText=\"Please select a category\"\n                    >\n                    {categories.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                margin=\"dense\"\n                autoFocus\n                id=\"name\"\n                label=\"Title\"\n                fullWidth\n                variant=\"standard\"\n                value={title}\n                onChange={(event) => {setTitle(event.target.value)}}\n                />\n                <TextField\n                margin=\"dense\"\n                label=\"Description\"\n                fullWidth\n                variant=\"standard\"\n                value={description}\n                onChange={(event) => {setDescription(event.target.value)}}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleDelete}>Delete</Button>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button onClick={handleUpdate}>Update</Button>\n            </DialogActions>\n        </div>\n    );\n}","import { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport Dialog from '@mui/material/Dialog';\nimport AddEventModal from \"./AddEventModal\";\nimport EditEventModal from \"./EditEventModal\";\nimport { Redirect } from \"react-router\";\n\nconst localizer = momentLocalizer(moment);\nlet allViews = Object.keys(Views).map(k => Views[k])\n\nexport default function MyCalendar({loggedIn}) {\n  const [events, setEvents]= useState([]);\n  const [modalAdd, setModalAdd]= useState(false);\n  const [modalEdit, setModalEdit]= useState(false);\n  const [clickedEvent, setClickedEvent]= useState({});\n\n  useEffect(() => { \n    async function getEvents(){\n      try {\n        const response = await axios.get('http://localhost:5000/todos');\n        if(response.status === 201){\n        for(let i = 0; i < response.data.length; i++) {\n          let resp = response.data[i]\n          resp.start = new Date(resp.start)\n          resp.end = new Date(resp.end)\n        }\n        setEvents(response.data)\n        }\n        else {\n          console.log(\"Error, todos not found.\")\n        }\n      }\n      catch (error) {\n        console.log(error);\n        return false;\n      }\n     }\n    getEvents();\n  }, []);\n\n  function handleSelectedSlot(event) {\n    setClickedEvent(event)\n    setModalAdd(true)\n  }\n\n  function handleCloseAdd() {\n    setModalAdd(false)\n  }\n\n  function handleSelectedEvent(event) {\n    setClickedEvent(event)\n    setModalEdit(true)\n  }\n\n  function handleChangeView(event) {\n    console.log(\"this is a test\")\n    console.log(event)\n  }\n\n  function handleCloseEdit() {\n    setModalEdit(false)\n  }\n  if(!loggedIn){\n    return <Redirect to=\"/login\"></Redirect>\n  }\n  return (\n    <div>\n      <Calendar\n        selectable\n        events={events}\n        step={60}\n        showMultiDayTimes\n        localizer={localizer}\n        views={allViews}\n        onView={(event) => handleChangeView(event)}\n        style={{ height: \"100vh\" }}\n        onSelectSlot={(event) => handleSelectedSlot(event)}\n        onSelectEvent={(event) => handleSelectedEvent(event)}\n      />\n      <Dialog open={modalAdd} onClose={handleCloseAdd}>\n        <AddEventModal clicked={clickedEvent} \n                  events={events} \n                  setEvents={setEvents} \n                  setModal={setModalAdd} />\n      </Dialog>\n      <Dialog open={modalEdit} onClose={handleCloseEdit}>\n        <EditEventModal clicked={clickedEvent} \n                  events={events} \n                  setEvents={setEvents} \n                  setModal={setModalEdit} />\n      </Dialog>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport { Typography } from '@mui/material'\nimport Confetti from 'react-confetti';\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\n\n\nexport default function IconLabelButtons({loggedIn}) {\n   \n  const history = useHistory();\n\n  const handleRoute = () =>{ \n    history.push(\"/todos\");\n  }\n  \n  const handleRouteCal = () =>{ \n    history.push(\"/calendar\");\n  }\n  if(!loggedIn){\n    return <Redirect to=\"/login\"></Redirect>\n  }\n    return (\n        <Typography variant=\"h4\" mt={20} ml={60}>\n            {\"You did it!\"}\n            <Typography variant=\"h4\" mt={0} ml={-13}>\n                {\"You are a time traveler!\"}\n            </Typography>\n            <Confetti\n                width={window.innerWidth}\n                height={window.innerHeight}\n            />\n            <Typography variant=\"h5\" mt={5} ml={-13}>\n                {\"The actual due date was: \"}\n            </Typography>\n            <Button variant=\"contained\" style={{ height: '45px', width: '310px', top: 10, left: -50 }} onClick={handleRouteCal}>\n                Go to Calendar\n                \n            </Button>\n            <Button variant=\"contained\" style={{ height: '45px', width: '310px', top: 80, left: -360}}onClick={handleRoute} >\n                Go to Todo\n            </Button>\n        </Typography>\n    );\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport { visuallyHidden } from '@mui/utils';\nimport { useHistory } from \"react-router-dom\";\nimport { RemoveFromCompleteModal } from \"./completeModals\";\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport { Redirect } from 'react-router';\nimport moment from \"moment\";\n\n//TO REDIRECT TO CONFIRMATION PAGE OR OTHER PAGES \n// it works sometimes... its a little odd \n//  <Redirect to = \"/confirmation\"/>\n\n\nfunction createData(task, duedate, actual, obId) {\n    return {\n        task,\n        duedate,\n        actual,\n        obId\n    };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\n\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) {\n            return order;\n        }\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    {\n        id: 'task',\n        numeric: false,\n        disablePadding: true,\n        label: 'Event',\n    },\n    {\n        id: 'duedate',\n        numeric: true,\n        disablePadding: false,\n        label: '\"Due Date\"',\n    },\n    {\n        id: 'actual',\n        numeric: true,\n        disablePadding: false,\n        label: 'Actual Due Date',\n    },\n    {\n        id: 'id',\n        numeric: true,\n        disablePadding: false,\n    },\n\n];\n\nfunction EnhancedTableHead(props) {\n    const { order, orderBy, onRequestSort } =\n        props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <Box component=\"span\" sx={visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </Box>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst EnhancedTableToolbar = (props) => {\n\n  \n\n    const history = useHistory();\n\n    const handleRoute = () => {\n        history.push(\"/todos\");\n    }\n\n    const { numSelected } = props;\n    const { selectedItems } = props;\n    return (\n        <Toolbar\n            sx={{\n                pl: { sm: 2 },\n                pr: { xs: 1, sm: 1 },\n                ...(numSelected > 0 && {\n                    bgcolor: (theme) =>\n                        alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n                }),\n            }}\n        >\n            {numSelected > 0 ? (\n                <Typography\n                    sx={{ flex: '1 1 100%' }}\n                    color=\"inherit\"\n                    variant=\"subtitle1\"\n                    component=\"div\"\n                >\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography\n                    sx={{ flex: '1 1 100%' }}\n                    variant=\"h6\"\n                    id=\"tableTitle\"\n                    component=\"div\"\n                >\n                    Completed To Do List\n\n                    <Button variant=\"outlined\" style={{ height: '45px', width: '200px', top: 10, left: 80 }} onClick={handleRoute}>\n                        Current To Do\n                    </Button>\n                </Typography>\n\n\n\n            )}\n\n            {numSelected > 0 ? (\n                <RemoveFromCompleteModal selectedItems = {selectedItems} />\n            ) : (\n                <div>\n\n\n                </div>\n            )}\n\n        </Toolbar>\n\n\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    selectedItems: PropTypes.arrayOf(Object),\n};\n\nexport default function EnhancedTable({loggedIn}) {\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('actual');\n    //const [orderBy, setOrderBy] = React.useState('importance');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [events, setEvent] = useState([]);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = events.map((n) => n.onId);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n\n    const handleClick = (event, task) => {\n        const selectedIndex = selected.indexOf(task);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, task);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (task) => selected.indexOf(task) !== -1;\n\n    // Avoid a layout jump when reaching the last page with empty rows.\n    const emptyRows =\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - events.length) : 0;\n    const getEventData = async () => {\n        try {\n            const data = await axios.get(\"http://localhost:5000/todos/completed\");\n            const rows = []\n            for(let i = 0; i < data.data.length; i++) {\n                let resp = data.data[i]\n                const date1 = moment(resp.end).format('L, h:mm a')  \n                const date2 = moment(resp.givenEnd).format('L, h:mm a')\n                rows.push(createData(resp.title, date1, date2, resp._id))\n            }\n            setEvent(rows);\n        }catch (e) {\n            console.log(e);\n        }\n        };\n        React.useEffect(() => {\n            getEventData();\n        }, []);\n\n    if(!loggedIn){\n        return <Redirect to=\"/login\"></Redirect>\n        }\n    return (\n        <Box sx={{ width: '100%' }}>\n            <Paper sx={{ width: '100%', mb: 2 }}>\n                <EnhancedTableToolbar numSelected={selected.length}selectedItems={selected} />\n                <TableContainer>\n                    <Table\n                        sx={{ minWidth: 750 }}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                    >\n                        <EnhancedTableHead\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={events.length}\n                        />\n                        <TableBody>\n                            {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                 rows.slice().sort(getComparator(order, orderBy)) */}\n                            {stableSort(events, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.obId);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row.obId)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.obId}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked={isItemSelected}\n                                                    inputProps={{\n                                                        'aria-labelledby': labelId,\n                                                    }}\n                                                />\n                                            </TableCell>\n                                            <TableCell\n                                                component=\"th\"\n                                                id={labelId}\n                                                scope=\"row\"\n                                                padding=\"none\"\n                                            >\n                                                {row.task}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.duedate}</TableCell>\n                                            <TableCell align=\"right\">{row.actual}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: (dense ? 33 : 53) * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={events.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                sx={{ mb: 1, ml: 2 }}\n                label=\"Dense padding\"\n            />\n        </Box>\n    );\n}\n\n\n\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Todos from \"./todos/Todos.js\";\nimport Settings from \"./settings/Settings.js\";\nimport Users from \"./users/User.js\";\nimport Register from \"./users/Register.js\";\nimport Calendar from \"./calendar/Calendar.js\";\nimport Finish from \"./tasks/finishTaskPage\";\nimport Complete from \"./todos/completedTodos.js\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\n\nfunction getLoggedIn() {\n  const tokenString = sessionStorage.getItem('loggedIn');\n  const userToken = JSON.parse(tokenString);\n  if(userToken){\n    return true\n  }\n  else{\n    return false\n  }\n}\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(getLoggedIn() ? true : false );\n  return (\n    <LocalizationProvider dateAdapter={DateAdapter}>\n      <BrowserRouter>\n        <Route path=\"/login\" >\n          <Users setLoggedIn={setLoggedIn}/>\n        </Route>\n        <Route path=\"/todos\">\n          <Todos loggedIn={loggedIn}/>\n        </Route>\n        <Route path=\"/settings\">\n          <Settings setLoggedIn={setLoggedIn} loggedIn={loggedIn} />\n        </Route>\n        <Route path=\"/register\">\n          <Register setLoggedIn={setLoggedIn}/>\n        </Route>\n        <Route path=\"/calendar\">\n          <Calendar loggedIn={loggedIn}/>\n        </Route>\n        <Route path=\"/finish\">\n          <Finish loggedIn={loggedIn}/>\n        </Route>\n        <Route path=\"/completed\">\n          <Complete loggedIn={loggedIn}/>\n        </Route>\n      </BrowserRouter>\n    </LocalizationProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo_outline.83a0e6a0.png\";","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport logo from \"../images/logo_outline.png\";\nimport styles from \"./navbar.module.css\";\n\nexport default function Navbar() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h2\" component=\"div\" sx={{ flexGrow: 1 }}>\n            <a href=\"/todos\">\n              <img src={logo} alt=\"logo\" className={styles.navImage} />\n            </a>\n          </Typography>\n          <Button color=\"inherit\">\n            <a href=\"/todos\">\n              <Typography>To Dos</Typography>\n            </a>\n          </Button>\n          <Button color=\"inherit\">\n            <a href=\"/calendar\">\n              <Typography>Calendar</Typography>\n            </a>\n          </Button>\n          <Button color=\"inherit\">\n            <a href=\"/settings\">\n              <Typography>Settings</Typography>\n            </a>\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.js\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Navbar from \"./navbar/Navbar.js\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@emotion/react\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#112434\",\n    },\n    secondary: {\n      main: \"#FFFFFF\",\n    },\n    typography: {\n      fontFamily: \"Raleway\",\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Navbar />\n      <App/>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}